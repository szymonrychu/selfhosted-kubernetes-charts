apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "ffmpeg-encoder-daemon.fullname" . }}
  labels:
    {{- include "ffmpeg-encoder-daemon.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.cronSchedule | quote }}
  jobTemplate:
    spec:
      template:
        metadata:
          {{- with .Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "ffmpeg-encoder-daemon.selectorLabels" . | nindent 12 }}
        spec:
          restartPolicy: OnFailure
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "ffmpeg-encoder-daemon.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: main
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              volumeMounts:
                - name: cache
                  mountPath: /cache
                - name: varlogs
                  mountPath: /var/log/ffmpeg-encoder-daemon
                - name: tmp
                  mountPath: /tmp
                - name: movies
                  mountPath: /workdir/movies
                - name: tvshows
                  mountPath: /workdir/tvshows
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumes:
            - name: cache
              emptyDir: {}
            - name: tmp
              emptyDir: {}
            - name: temp
              emptyDir: {}
            - name: varlogs
              emptyDir: {}
          {{- range .Values.persistence }}
            - name: {{ .name }}
            {{- if .enabled }}
              {{- if eq (.type | default "pvc") "pvc" }}
              persistentVolumeClaim:
                claimName: {{ .existingClaim | default (printf "%s-%s" (include "ffmpeg-encoder-daemon.fullname" $) .name ) }}
              {{- else if eq .type "hostPath" }}
              hostPath:
                path: {{ .hostPath }}
              {{- end }}
            {{- else }}
              emptyDir: {}
            {{- end }}
          {{- end }}