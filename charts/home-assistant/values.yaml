  # Default values for home-assistant.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

localVoiceProcessing:
  enabled: false
  piperVoice: pl_PL-gosia-medium
  whisperModel: medium-int8
  whisperBeamSize: 3
  whisperLanguage: pl
  openwakewordModel: ok_nabu

homeassistant:
  name: home-assistant

network:
  trustedProxies:
    - 192.168.1.0/24
    - 10.42.0.0/16

prometheus:
  enabled: false
  namespace: hass
  token: change_me

postgresql:
  enabled: false
  username: change_me
  usernameSecret: {}
    # name: ""
    # key: ""
  password: change_me
  passwordSecret: {}
    # name: ""
    # key: ""
  host: home-assistant-db
  port: "5432"
  database: homeassistant

templates:
  configuration.yaml: |
    ### RENDERER_REPLACE_DESTINATION ###
    default_config:
    homeassistant: !include homeassistant.yaml
    http:
      use_x_forwarded_for: true
      trusted_proxies:
        {%- for network in config.network.trustedProxies %}
        - {{ network }}
        {%- endfor %}
    automation: !include automations.yaml
    zone: !include zone.yaml
    sensor: !include sensor.yaml
    switch: !include switch.yaml
    device_tracker: !include device_tracker.yaml
    {%- if config.postgresql.enabled %}
    recorder: !include recorder.yaml
    {%- endif %}
    {%- if config.prometheus.enabled %}
    prometheus: !include prometheus.yaml
    {%- endif %}
  
  prometheus.yaml: |
    prometheus:
      namespace: {{ config.prometheus.namespace }}
  recorder.yaml: |
    ### RENDERER_REPLACE_DESTINATION ###
    purge_keep_days: 30
    commit_interval: 0
    auto_purge: true
    auto_repack: true
    db_url: postgresql://{{ env.postgresql_username }}:{{ env.postgresql_password }}@{{ env.postgresql_host }}:{{ env.postgresql_port }}/{{ config.postgresql.database }}
  homeassistant.yaml: |
    name: {{ config.homeassistant.name }}
    auth_providers:
      - type: homeassistant
  automations.yaml: ""
  zone.yaml: ""
  sensor.yaml: |
    - platform: time_date
      display_options:
        - 'time'
        - 'date'
        - 'date_time'
        - 'date_time_utc'
        - 'date_time_iso'
        - 'time_date'
        - 'time_utc'
  switch.yaml: ""
  device_tracker.yaml: ""

additionalDNSServers:
  - 192.168.1.1

images:
  homeassistant:
    repository: ghcr.io/home-assistant/home-assistant
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  piper:
    repository: ghcr.io/szymonrychu/piper
    pullPolicy: IfNotPresent
    # renovate: image=ghcr.io/szymonrychu/piper
    tag: "0.0.7"
  whisper:
    repository: ghcr.io/szymonrychu/whisper
    pullPolicy: IfNotPresent
    # renovate: image=ghcr.io/szymonrychu/whisper
    tag: "0.0.5"
  openwakeword:
    repository: ghcr.io/szymonrychu/openwakeword
    pullPolicy: IfNotPresent
    # renovate: image=ghcr.io/szymonrychu/whisper
    tag: "0.0.4"
  initJinjaRenderer:
    repository: ghcr.io/szymonrychu/jinja-renderer
    pullPolicy: IfNotPresent
    # renovate: image=ghcr.io/szymonrychu/jinja-renderer
    tag: "0.1.0"
  initWaitForPostgres:
    repository: bash
    pullPolicy: IfNotPresent
    # renovate: image=bash
    tag: "5.2.21"

priorityClassName: {}
  # homeassistant: ""
  # piper: ""
  # whisper: ""
  # openwakeword: ""

securityContexts:
  homeassistant: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  piper: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  whisper: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  openwakeword: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  initJinjaRenderer: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  initWaitForPostgres: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

resources:
  homeassistant: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  piper: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  whisper: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  openwakeword: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  initJinjaRenderer: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  initWaitForPostgres: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

metrics:
  port: 9652
  token: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

persistence:
  homeassistant:
    enabled: false
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    annotations: {}
  piper:
    enabled: false
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    annotations: {}
  whisper:
    enabled: false
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    annotations: {}

nodeSelector:
  homeassistant: {}
  piper: {}
  whisper: {}
  openwakeword: {}

tolerations:
  homeassistant: []
  piper: []
  whisper: []
  openwakeword: []

affinity:
  homeassistant: {}
  piper: {}
  whisper: {}
  openwakeword: {}
