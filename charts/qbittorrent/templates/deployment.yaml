apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "qbittorrent.fullname" . }}
  labels:
    {{- include "qbittorrent.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  {{- end }}
  selector:
    matchLabels:
      {{- include "qbittorrent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "qbittorrent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "qbittorrent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initPermissions.enabled }}
      initContainers:
        - name: init-permissions
          image: "{{ .Values.initPermissions.image.repository }}:{{ .Values.initPermissions.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.initPermissions.image.pullPolicy }}
          restartPolicy: Always
          command:
            - /bin/sh
          args:
            - -c
              su -c chown -R "$(id -u):$(id -g)" {{ range .Values.persistence }}{{ .mountPath }}/* {{ end }}
          resources:
            {{- toYaml .Values.initPermissions.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.initPermissions.securityContext | nindent 12 }}
          volumeMounts:
      {{- range .Values.persistence }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
      {{- end }}
        {{- end }}
      containers:
        - name: main
          securityContext:
            {{- toYaml .Values.qbittorrent.securityContext | nindent 12 }}
          image: "{{ .Values.qbittorrent.image.repository }}:{{ .Values.qbittorrent.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.qbittorrent.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.qbittorrent.resources | nindent 12 }}
          volumeMounts:
            - name: cache
              mountPath: /cache
            - name: varlogs
              mountPath: /var/logs
            - name: tmp
              mountPath: /tmp
      {{- range .Values.persistence }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
      {{- end }}
      {{- if .Values.oauth2Proxy.enabled }}
        - name: proxy
          securityContext:
            {{- toYaml .Values.oauth2Proxy.securityContext | nindent 12 }}
          image: "{{ .Values.oauth2Proxy.image.repository }}:{{ .Values.oauth2Proxy.image.tag }}"
          imagePullPolicy: {{ .Values.oauth2Proxy.image.pullPolicy }}
          env:
            - name: OAUTH2_PROXY_PROVIDER
              value: keycloak-oidc
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: keycloak-client-id
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: keycloak-client-secret
            - name: OAUTH2_PROXY_REDIRECT_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: keycloak-redirect-url
            - name: OAUTH2_PROXY_OIDC_ISSUER_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: keycloak-realm-url
            - name: OAUTH2_PROXY_HTTP_ADDRESS
              value: 0.0.0.0:4180
            - name: OAUTH2_PROXY_REVERSE_PROXY
              value: "true"
            - name: OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER
              value: "true"
            - name: OAUTH2_PROXY_PASS_ACCESS_TOKEN
              value: "true"
            - name: OAUTH2_PROXY_SKIP_PROVIDER_BUTTON
              value: "true"
            - name: OAUTH2_PROXY_UPSTREAMS
              value: http://localhost:8080
            - name: OAUTH2_PROXY_COOKIE_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: cookie-name
            - name: OAUTH2_PROXY_COOKIE_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: cookie-domain
            - name: OAUTH2_PROXY_EMAIL_DOMAINS
              value: "*"
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: cookie-secret
            - name: OAUTH2_PROXY_ALLOWED_GROUPS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: allowed-groups
          ports:
            - name: http-oidc
              containerPort: 4180
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http-oidc
          readinessProbe:
            tcpSocket:
              port: http-oidc
          resources:
            {{- toYaml .Values.oauth2Proxy.resources | nindent 12 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: cache
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: temp
          emptyDir: {}
        - name: varlogs
          emptyDir: {}
      {{- range .Values.persistence }}
        - name: {{ .name }}
        {{- if .enabled }}
          {{- if eq (.type | default "pvc") "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .existingClaim | default (printf "%s-%s" (include "qbittorrent.fullname" $) .name ) }}
          {{- else if eq .type "hostPath" }}
          hostPath:
            path: {{ .hostPath }}
          {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- end }}
