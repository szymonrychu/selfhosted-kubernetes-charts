apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "qbittorrent.fullname" . }}
  labels:
    {{- include "qbittorrent.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "qbittorrent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "qbittorrent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "qbittorrent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: config
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config-tmp
          command:
            - sh
          args:
            - -c
            - ls /config-tmp//qBittorrent/qBittorrent.conf || (mkdir -p /config-tmp/qBittorrent/ && cp /config/qBittorrent/qBittorrent.conf /config-tmp//qBittorrent/qBittorrent.conf)
      containers:
        - name: qbittorrent
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /media
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
      {{- if .Values.vpnContainer.enabled }}
        - name: port-forwarding
          image: "{{ .Values.vpnContainer.portForwardImage.repository }}:{{ .Values.vpnContainer.portForwardImage.tag }}"
          imagePullPolicy: {{ .Values.vpnContainer.portForwardImage.pullPolicy }}
          securityContext:
            runAsGroup: 0
            runAsUser: 0
          args:
            - /bin/sh
            - -ce
            - while true; do /usr/src/app/main.sh || true; sleep 30; done
          resources:
            {{- toYaml .Values.vpnContainer.resources | nindent 12 }}
          env:
            - name: QBT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: qbittorrent-username
            - name: QBT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: qbittorrent-password
            - name: QBT_ADDR
              value: "http://localhost:8080"
            - name: GTN_ADDR
              value: "http://localhost:8000"
        - name: gluetun
          securityContext:
            sysctls:
              - name: net.ipv6.conf.all.disable_ipv6
                value: "1"
            runAsGroup: 0
            privileged: true
            # runAsNonRoot: true
            runAsUser: 0
            capabilities:
              add: ["NET_ADMIN", "NET_RAW"]
          image: "{{ .Values.vpnContainer.gluetunImage.repository }}:{{ .Values.vpnContainer.gluetunImage.tag }}"
          imagePullPolicy: {{ .Values.vpnContainer.gluetunImage.pullPolicy }}
          resources:
            {{- toYaml .Values.vpnContainer.resources | nindent 12 }}
          ports:
            - name: shadowsockstcp
              containerPort: 8388
              protocol: TCP
            - name: shadowsocksudp
              containerPort: 8388
              protocol: UDP
          env:
            - name: VPN_SERVICE_PROVIDER
              value: private internet access
            - name: VPN_TYPE
              value: openvpn
            - name: OPENVPN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: pia-username
            - name: OPENVPN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "qbittorrent.fullname" . }}
                  key: pia-password
            - name: SERVER_REGIONS
              value: Netherlands
            - name: PORT_FORWARD_ONLY
              value: "true"
            - name: VPN_PORT_FORWARDING
              value: "on"
      {{-  end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
        {{- if .Values.persistence.config.enabled }}
          {{- if eq (.Values.persistence.config.type | default "pvc") "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.config.existingClaim | default (printf "%s-config" (include "qbittorrent.fullname" $) ) }}
          {{- else if eq .Values.persistence.config.type "hostPath" }}
          hostPath:
            path: {{ .Values.persistence.config.hostPath }}
          {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: media
        {{- if .Values.persistence.media.enabled }}
          {{- if eq (.Values.persistence.media.type | default "pvc") "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.media.existingClaim | default (printf "%s-downloads" (include "qbittorrent.fullname" $) ) }}
          {{- else if eq .Values.persistence.media.type "hostPath" }}
          hostPath:
            path: {{ .Values.persistence.media.hostPath }}
          {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
