apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sonarr.fullname" . }}
  labels:
    {{- include "sonarr.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "sonarr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sonarr.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sonarr.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: sonarr
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: cache
              mountPath: /cache
            - name: varlogs
              mountPath: /var/logs
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
        - name: oauth2proxy
          env:
            - name: HOME
              value: /config
          securityContext:
            {{- toYaml .Values.oauth2proxy.securityContext | nindent 12 }}
          image: "{{ .Values.oauth2proxy.image.repository }}:{{ .Values.oauth2proxy.image.tag }}"
          imagePullPolicy: {{ .Values.oauth2proxy.image.pullPolicy }}
          resources:
            {{- toYaml .Values.oauth2proxy.resources | nindent 12 }}
          env:
            - name: OAUTH2_PROXY_PROVIDER
              value: keycloak-oidc
            - name: OAUTH2_PROXY_HTTP_ADDRESS
              value: 0.0.0.0:{{ .Values.service.port }}
            - name: OAUTH2_PROXY_REVERSE_PROXY
              value: "true"
            - name: OAUTH2_PROXY_SKIP_PROVIDER_BUTTON
              value: "true"
            - name: OAUTH2_PROXY_UPSTREAMS
              value: http://localhost:8989
            - name: OAUTH2_PROXY_SESSION_COOKIE_MINIMAL
              value: "true"
            - name: OAUTH2_PROXY_EMAIL_DOMAINS
              value: "*"
            - name: OAUTH2_PROXY_PROVIDER
              value: keycloak-oidc
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "sonarr.fullname" . }}
                  key: client-id
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "sonarr.fullname" . }}
                  key: client-secret
            - name: OAUTH2_PROXY_REDIRECT_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "sonarr.fullname" . }}
                  key: redirect-url
            # - name: OAUTH2_PROXY_ALLOWED_GROUP
            #   valueFrom:
            #     configMapKeyRef:
            #       name: {{ include "sonarr.fullname" . }}
            #       key: allowed-group
            - name: OAUTH2_PROXY_OIDC_ISSUER_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "sonarr.fullname" . }}
                  key: realm-url
            - name: OAUTH2_PROXY_COOKIE_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "sonarr.fullname" . }}
                  key: cookie-name
            - name: OAUTH2_PROXY_COOKIE_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: {{ include "sonarr.fullname" . }}
                  key: cookie-domain
            # - name: OAUTH2_PROXY_SCOPE
            #   valueFrom:
            #     configMapKeyRef:
            #       name: {{ include "sonarr.fullname" . }}
            #       key: scope
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "sonarr.fullname" . }}
                  key: cookie-secret
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: cache
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: temp
          emptyDir: {}
        - name: varlogs
          emptyDir: {}
        - name: config
        {{- if .Values.persistence.config.enabled }}
          {{- if eq (.Values.persistence.config.type | default "pvc") "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.config.existingClaim | default (printf "%s-config" (include "sonarr.fullname" $) ) }}
          {{- else if eq .Values.persistence.config.type "hostPath" }}
          hostPath:
            path: {{ .Values.persistence.config.hostPath }}
          {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: data
        {{- if .Values.persistence.data.enabled }}
          {{- if eq (.Values.persistence.data.type | default "pvc") "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.data.existingClaim | default (printf "%s-data" (include "sonarr.fullname" $) ) }}
          {{- else if eq .Values.persistence.data.type "hostPath" }}
          hostPath:
            path: {{ .Values.persistence.data.hostPath }}
          {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
