apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "code-server.fullname" . }}
  labels:
    {{- include "code-server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "code-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "code-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "code-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: rsync
          securityContext:
            {{- toYaml .Values.rsync.securityContext | nindent 12 }}
          image: "{{ .Values.rsync.image.repository }}:{{ .Values.rsync.image.tag }}"
          arguments:
            - -c
            - rsync -avz /source /destination
          volumeMounts:
            - mountPath: /source
              name: shared-data
            - mountPath: /destination
              name: workdir
          resources:
            {{- toYaml .Values.rsync.resources | nindent 12 }}
      containers:
        - name: rsync
          securityContext:
            {{- toYaml .Values.rsync.securityContext | nindent 12 }}
          image: "{{ .Values.rsync.image.repository }}:{{ .Values.rsync.image.tag }}"
          env:
            - name: SOURCE_DIR
              value: "/source"
            - name: DESTINATION_DIR
              value: "/destination"
          volumeMounts:
            - mountPath: /source
              name: workdir
            - mountPath: /destination
              name: shared-data
          resources:
            {{- toYaml .Values.rsync.resources | nindent 12 }}
        - name: code
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: GROUP_NAME
              value: {{ .Values.config.groupName | quote }}
            - name: USER_NAME
              value: {{ .Values.config.userName | quote }}
            - name: USER_UID
              value: {{ .Values.config.userUid | quote }}
            - name: USER_GID
              value: {{ .Values.config.userGid | quote }}
            - name: PROXY_DOMAIN
              value: {{ .Values.config.domain | quote }}
            - name: GROUP_NAME
              value: {{ .Values.config.groupName | quote }}
            - name: USER_NAME
              value: {{ .Values.config.userName | quote }}
          volumeMounts:
            - mountPath: /home/{{ .Values.config.userName }}
              name: workdir
            - name: code-secrets
              mountPath: "/secrets"
              readOnly: true
            - name: entrypointd
              mountPath: "/etc/codeserver.d"
              readOnly: true
            - name: docker-sock
              mountPath: /var/run/docker.sock
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: entrypointd
          configMap:
            name: {{ include "code-server.fullname" . }}-entrypointd
            defaultMode: 0777
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: code-secrets
          secret:
            secretName: {{ include "code-server.fullname" . }}-code-secrets
        - name: workdir
          emptyDir: {}
        - name: shared-data
        {{- if .Values.persistence.sharedData.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.sharedData.existingClaim | default (printf "%s-%s" (include "code-server.fullname" .) "shared-data") }}
        {{- else }}
          emptyDir: {}
        {{- end }}
