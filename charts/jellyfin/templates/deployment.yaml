apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jellyfin.fullname" . }}
  labels:
    {{- include "jellyfin.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "jellyfin.selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ .Values.upgradeStrategy }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "jellyfin.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "jellyfin.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
        {{- if .Values.initPermissions.enabled }}
      initContainers:
        - name: init-permissions
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          restartPolicy: Always
          command:
            - /bin/sh
          args:
            - -c
            - |
              su -c chown -R "$(id -u):$(id -g)" {{ range .Values.persistence }}{{ .mountPath }}/* {{end }}
          resources:
            {{- toYaml .Values.initPermissions.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: true
          volumeMounts:
      {{- range .Values.persistence }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
      {{- end }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          startupProbe:
            failureThreshold: 60
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: JELLYFIN_PublishedServerUrl
              value: {{ (first .Values.ingress.hosts).host | quote }}
          volumeMounts:
            - name: cache
              mountPath: /cache
            - name: varlogs
              mountPath: /var/logs
            - name: tmp
              mountPath: /tmp
      {{- range .Values.persistence }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: cache
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: temp
          emptyDir: {}
        - name: varlogs
          emptyDir: {}
      {{- range .Values.persistence }}
        - name: {{ .name }}
        {{- if .enabled }}
          {{- if eq (.type | default "pvc") "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .existingClaim | default (printf "%s-%s" (include "jellyfin.fullname" $) .name ) }}
          {{- else if eq .type "hostPath" }}
          hostPath:
            path: {{ .hostPath }}
          {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- end }}
