apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jellyfin.fullname" . }}
  labels:
    {{- include "jellyfin.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "jellyfin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "jellyfin.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "jellyfin.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: jellyfin
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
            {{- if and .Values.nvidiaVisibleDevice }}
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: {{ .Values.nvidiaVisibleDevice }}
            {{- end }}
          volumeMounts:
            - name: cache
              mountPath: /cache
            - name: varlogs
              mountPath: /var/logs
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /config
            - name: media
              mountPath: /samba
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: cache
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: temp
          emptyDir: {}
        - name: varlogs
          emptyDir: {}
        - name: config
        {{- if .Values.persistence.config.enabled }}
          {{- if eq (.Values.persistence.config.type | default "pvc") "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.config.existingClaim | default (printf "%s-config" (include "jellyfin.fullname" $) ) }}
          {{- else if eq .Values.persistence.config.type "hostPath" }}
          hostPath:
            path: {{ .Values.persistence.config.hostPath }}
          {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: media
        {{- if .Values.persistence.media.enabled }}
          {{- if eq (.Values.persistence.media.type | default "pvc") "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.media.existingClaim | default (printf "%s-media" (include "jellyfin.fullname" $) ) }}
          {{- else if eq .Values.persistence.media.type "hostPath" }}
          hostPath:
            path: {{ .Values.persistence.media.hostPath }}
          {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
